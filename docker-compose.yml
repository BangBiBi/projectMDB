services:
  # 1. MySQL - 전통적인 관계형 DB (OLTP 최적화)
  mysql:
    image: mysql:8.0
    container_name: mdb-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: postal_codes_db
      MYSQL_USER: mdb_user
      MYSQL_PASSWORD: mdb_password
    ports:
      - "3307:3306"  # 포트 변경하여 충돌 방지
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schemas/mysql:/docker-entrypoint-initdb.d
    networks:
      - mdb-network
    command: --innodb-buffer-pool-size=512M --innodb-log-file-size=256M

  # 2. PostgreSQL - 고성능 관계형 DB (복잡한 쿼리 최적화)
  postgresql:
    image: postgres:15
    container_name: mdb-postgresql
    environment:
      POSTGRES_DB: postal_codes_db
      POSTGRES_USER: mdb_user
      POSTGRES_PASSWORD: mdb_password
    ports:
      - "5433:5432"  # 포트 변경하여 충돌 방지
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schemas/postgresql:/docker-entrypoint-initdb.d
    networks:
      - mdb-network
    command: postgres -c shared_preload_libraries=pg_stat_statements -c max_connections=200

  # 3. MongoDB - NoSQL 문서 DB (대용량 데이터 처리)
  mongodb:
    image: mongo:7.0
    container_name: mdb-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
      MONGO_INITDB_DATABASE: postal_codes_db
    ports:
      - "27018:27017"  # 포트 변경하여 충돌 방지
    volumes:
      - mongo_data:/data/db
      - ./database/schemas/mongodb:/docker-entrypoint-initdb.d
    networks:
      - mdb-network

  # 4. Oracle - 엔터프라이즈 관계형 DB (고급 최적화 기능)
  oracle:
    image: gvenzl/oracle-xe:21-slim
    container_name: mdb-oracle
    environment:
      ORACLE_PASSWORD: mdb_password
      ORACLE_DATABASE: postal_codes_db
      ORACLE_USERNAME: mdb_user
      ORACLE_USER_PASSWORD: mdb_password
    ports:
      - "1522:1521"  # 포트 변경하여 충돌 방지
      - "5501:5500"  # EM Express 포트 변경
    volumes:
      - oracle_data:/opt/oracle/oradata
      - ./database/schemas/oracle:/docker-entrypoint-initdb.d
    networks:
      - mdb-network
    mem_limit: 3g

  # 5. SQLite - 경량 파일 기반 DB (개발 편의성 최적화)  
  # SQLite는 파일 기반이므로 별도 컨테이너 불필요
  # backend 애플리케이션에서 직접 파일로 사용

volumes:
  mysql_data:
  postgres_data:
  mongo_data:
  oracle_data:
  # SQLite는 파일 기반이므로 볼륨 불필요

networks:
  mdb-network:
    driver: bridge
